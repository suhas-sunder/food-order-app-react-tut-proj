{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop Files\\\\Web Dev Projects and Learning\\\\1 My Projects\\\\github\\\\food-order-app-react-tut-proj\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport CartContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst manageCartItem = () => {\n  // Add existing total to new cart item total\n\n  state.totalAmount + action.item.price * action.item.amount;\n\n  // If cart item already exists, link to ref in global storage\n  const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n  const existingCartItem = state.items[existingCartItemIndex];\n};\n\n// Add items to meals within cart menu\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    let updatedItems;\n\n    // Manage existing cart items to avoid duplicate entries\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  // Remove items to meals within cart menu\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","manageCartItem","state","action","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","cartReducer","type","updatedItems","updatedItem","concat","updatedTotalAmount","existingItem","filter","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Desktop Files/Web Dev Projects and Learning/1 My Projects/github/food-order-app-react-tut-proj/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport CartContext from './CartContext';\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst manageCartItem = () => {\r\n    // Add existing total to new cart item total\r\n    \r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    // If cart item already exists, link to ref in global storage\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n}\r\n\r\n// Add items to meals within cart menu\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    \r\n\r\n    let updatedItems;\r\n\r\n    // Manage existing cart items to avoid duplicate entries\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  // Remove items to meals within cart menu\r\n  if (action.type === 'REMOVE') {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter(item => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount\r\n    };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: 'ADD', item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: 'REMOVE', id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}